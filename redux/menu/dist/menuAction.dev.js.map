{"version":3,"sources":["menuAction.js"],"names":["setMenuData","data","type","menuActionTypes","SET_MENU_DATA","payload","setMissionData","SET_MISSION_DATA","setRegStatus","SET_REG_STATUS","setUserUploadStatus","SET_USER_UPLOAD_STATUS","setRegCertData","SET_REG_CERT_DATA","setTabKey","SET_TAB_KEY","fetchMenuData","dispatch","menuItems","fetchMissionData","Axios","get","API_PATH","then","setIsloading","SET_IS_LOADING"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAK;AAChCC,IAAAA,IAAI,EAAEC,iCAAgBC,aADU;AAEhCC,IAAAA,OAAO,EAAEJ;AAFuB,GAAL;AAAA,CAAxB;;;;AAKA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAAL,IAAI;AAAA,SAAK;AACnCC,IAAAA,IAAI,EAAEC,iCAAgBI,gBADa;AAEnCF,IAAAA,OAAO,EAAEJ;AAF0B,GAAL;AAAA,CAA3B;;;;AAKA,IAAMO,YAAY,GAAG,SAAfA,YAAe,CAAAP,IAAI;AAAA,SAAK;AACjCC,IAAAA,IAAI,EAAEC,iCAAgBM,cADW;AAEjCJ,IAAAA,OAAO,EAAEJ;AAFwB,GAAL;AAAA,CAAzB;;;;AAKA,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAT,IAAI;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAEC,iCAAgBQ,sBADkB;AAExCN,IAAAA,OAAO,EAAEJ;AAF+B,GAAL;AAAA,CAAhC;;;;AAKA,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAAAX,IAAI;AAAA,SAAK;AACnCC,IAAAA,IAAI,EAAEC,iCAAgBU,iBADa;AAEnCR,IAAAA,OAAO,EAAEJ;AAF0B,GAAL;AAAA,CAA3B;;;;AAKA,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAAAb,IAAI;AAAA,SAAK;AAC9BC,IAAAA,IAAI,EAAEC,iCAAgBY,WADQ;AAE9BV,IAAAA,OAAO,EAAEJ;AAFqB,GAAL;AAAA,CAAtB;;;;AAMQ,IAAMe,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACqB,wBADrB;;AAAA;AACGC,YAAAA,SADH;AACoC;AACvCD,YAAAA,QAAQ,CAACjB,WAAW,CAACkB,SAAD,CAAZ,CAAR;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMH,CAPM;;;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAClC,SAAO,UAAAF,QAAQ,EAAI;AACfG,sBAAMC,GAAN,CAAUC,mBAAW,wBAArB,EACKC,IADL,CACU,gBAAc;AAAA,UAAXtB,IAAW,QAAXA,IAAW;AAChBgB,MAAAA,QAAQ,CAACX,cAAc,CAACL,IAAD,CAAf,CAAR;AAEH,KAJL;AAOH,GARD;AASH,CAVM;;;;AAYA,IAAMuB,YAAY,GAAG,SAAfA,YAAe,CAAAvB,IAAI;AAAA,SAAK;AACjCC,IAAAA,IAAI,EAAEC,iCAAgBsB,cADW;AAEjCpB,IAAAA,OAAO,EAAEJ;AAFwB,GAAL;AAAA,CAAzB","sourcesContent":["import { menuActionTypes } from './menuActionTypes'\r\nimport Axios from 'axios';\r\nimport {API_PATH } from '../../Global';\r\nimport {getMenuItems} from '../../lib/api'\r\nexport const setMenuData = data => ({\r\n    type: menuActionTypes.SET_MENU_DATA,\r\n    payload: data\r\n\r\n})\r\nexport const setMissionData = data => ({\r\n    type: menuActionTypes.SET_MISSION_DATA,\r\n    payload: data\r\n\r\n})\r\nexport const setRegStatus = data => ({\r\n    type: menuActionTypes.SET_REG_STATUS,\r\n    payload: data\r\n\r\n})\r\nexport const setUserUploadStatus = data => ({\r\n    type: menuActionTypes.SET_USER_UPLOAD_STATUS,\r\n    payload: data\r\n\r\n})\r\nexport const setRegCertData = data => ({\r\n    type: menuActionTypes.SET_REG_CERT_DATA,\r\n    payload: data\r\n\r\n})\r\nexport const setTabKey = data => ({\r\n    type: menuActionTypes.SET_TAB_KEY,\r\n    payload: data\r\n\r\n})\r\n\r\n        export const fetchMenuData = () => {\r\n            return async dispatch => {\r\n                const menuItems = await getMenuItems() //applo client \r\n                dispatch(setMenuData(menuItems))\r\n                \r\n\r\n            }\r\n        }\r\n        export const fetchMissionData = () => {\r\n            return dispatch => {\r\n                Axios.get(API_PATH + 'fetch-mission-data.php')\r\n                    .then(({ data }) => {\r\n                        dispatch(setMissionData(data))\r\n                        \r\n                    })\r\n                    \r\n\r\n            }\r\n        }\r\n\r\n        export const setIsloading = data => ({\r\n            type: menuActionTypes.SET_IS_LOADING,\r\n            payload: data\r\n        \r\n        })"],"file":"menuAction.dev.js"}